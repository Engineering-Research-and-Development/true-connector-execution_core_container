# Use with Spring Profile RECEIVER "java -Dspring.profiles.active=RECEIVER"
spring.banner.location=classpath:true-connector-banner.txt

logging.level.root=ERROR
logging.level.it.eng.idsa.businesslogic=INFO
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger.%M - %msg%n

#GLOBAL PROPERTIES
#define the directory where you can find certificates
application.targetDirectory=C:\\PROJECTS\\IDS\\certificates\\
#SSL Settings for https communication
#use https instead of http, if false the ssl settings can be empty
server.ssl.enabled=true
application.ssl.key-store.name=ssl-server.jks
application.ssl.key-store-password=changeit
application.ssl.key-password=changeit

# Check the configurations !!!
### App setup
server.port=8444
server.max-http-header-size=15360
server.ssl.key-alias=execution-core-container
server.ssl.key-password=${application.ssl.key-password}
server.ssl.key-store-password=${application.ssl.key-store-password}
server.ssl.key-store=${application.targetDirectory}${application.ssl.key-store.name}
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.SHA256=AC3BCAED1F01C63E18D4E0994C48D18EB6F79D01844564A4BA8476BE2D17F5E4
#disable hostname validation
application.disableSslVerification=true
#enable protocol validation (default=true)
#correct protocol is required in Forward-To (https/http://example.com || wss://example.com || idscp://example.com)
application.validateProtocol=false

### DAPS Parameters (for getting token)
application.isEnabledDapsInteraction=true
#Cache token(true) or always use new token(false)
application.tokenCaching=true
#Fetch and cache token on startup. application.tokenCaching must be true!
application.fetchTokenOnStartup=true
#v1,v2,orbiter
application.dapsVersion=v2
#Orbiter
application.daps.orbiter.privateKey=IDS-Connector.key
application.daps.orbiter.password=IDS-Connector.pem
#application.daps.orbiter.privateKey=privatekeyeng.key IC
#application.daps.orbiter.password=publickeyeng.pem IC
#v1
#application.dapsUrl=https://daps.aisec.fraunhofer.de/token
# (v2 AISEC DAPS)
application.dapsUrl=https://daps.aisec.fraunhofer.de/v2/token
#Orbiter
#application.dapsUrl= http://212.81.222.225:8084/token
#application.keyStoreName=engineering1-keystore.jks
#v1
#application.keyStoreName=market40eng-keystore.jks
application.keyStorePassword=password
application.keystoreAliasName=1
#application.connectorUUID=4c49777d-4718-4d5c-9afe-1057849c1256
#V2
application.keyStoreName=engineering1-keystore.jks
application.connectorUUID=c33cdc09-1745-4371-a0f9-822b305da7e2
#application.connectorUUID=6a963d6c-d82e-4691-99b0-6cd57b598925
#DAPS URI for validating
application.dapsJWKSUrl=https://daps.aisec.fraunhofer.de
application.trustStoreName=server.truststore.p12
application.trustStorePassword=changeit
#Clearing House endpoint and local dir for hashing
application.clearingHouseUrl=http://109.232.32.193:8280/data
application.clearingHouseHashDir=C:\\Users\\david.jovanovic\\Documents\\IDS\\ECC_Clearing_House\\Sender_Hashing

### Clearng-House
application.isEnabledClearingHouse=true

#D endpoint

#Connector URIs
application.uriSchema=http
application.uriAuthority=//w3id.org/engrd
#application.uriPath=/autogen/artifactResponseMessage/
application.uriConnector=/connector/

#IDSCP2
application.idscp2.isEnabled=false
#define if the connector is used as receiver
application.isReceiver=true

#HTTP port
http.port=8082

#WSS Port
application.wss.server.port=8086

#Camel A endpoint
application.camelSenderPort=8888

#Camel B endpoint
application.camelReceiverPort=8890

#Open API Data APP
application.openDataAppReceiver=https://localhost:8083/data
# For WSS flow
#application.openDataAppReceiver=https://localhost:9000/incoming-data-app/routerBodyBinary

# Body: binary
#application.openDataAppReceiverRouter=mixed
 Body: form-data
#application.openDataAppReceiverRouter=form
# Body: http-header
application.openDataAppReceiverRouter=http-header

# Body:binary
#application.eccHttpSendRouter=mixed
# Body: form-data
#application.eccHttpSendRouter=form
# Body: http-header
application.eccHttpSendRouter=http-header

#Utils
application.name=@project.artifactId@
build.version=@project.version@
build.timestamp=@timestamp@

#Camel - Spring Boot
camel.springboot.main-run-controller=true
camel.ssl.config.key-managers.key-password=${application.ssl.key-password}
camel.ssl.config.key-managers.key-store.resource=${application.targetDirectory}${application.ssl.key-store.name}
camel.ssl.config.key-managers.key-store.password=${application.ssl.key-store-password}

#Camel - HTTP4
#Selfdescription SSL Settings
camel.component.http4.use-global-ssl-context-parameters=true

#Camel - Jetty
#Camel routes SSL Settings
camel.component.jetty.use-global-ssl-context-parameters=true
camel.component.jetty.keystore=${application.targetDirectory}${application.ssl.key-store.name}
camel.component.jetty.ssl-password=${application.ssl.key-store-password}
camel.component.jetty.ssl-key-password=${application.ssl.key-password}


information.model.version=@information.model.version@
application.basedir=@application.basedir@

# Enable WebSocket over Https -> Disable Idscp to use!
application.websocket.isEnabled=false
#Enable WS communication channel from/to DataAPP
application.dataApp.websocket.isEnabled=false

# Usage Control App
spring.ids.ucapp.baseUrl=http://localhost:9552/
spring.ids.ucapp.addPolicyEndpoint=policy/usage/odrl
application.isEnabledUsageControl=true

#Technical headers
application.technicalHeaders=header,Is-Enabled-DataApp-WebSocket,payload,Forward-To,Payload-Content-Type

#SelfDescription
application.selfdescription.description=Connector description
application.selfdescription.title=Connector title
application.selfdescription.curator=http://curatorURI.com
application.selfdescription.maintainer=http://maintainerURI.com
application.selfdescription.registrateOnStartup=false
application.selfdescription.brokerURL=
application.selfdescription.filelocation=C:\\Users\\david.jovanovic\\Documents\\work11.20\\market4.0-execution_core_container_business_logic\\src\\main\\resources
spring.security.user.name=admin
spring.security.user.password=password
#For logging the response over WSS set to DEBUG, else leave empty
#logging.level.it.eng.idsa.businesslogic.processor.receiver=
