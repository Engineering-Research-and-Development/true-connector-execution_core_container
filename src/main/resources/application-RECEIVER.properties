# Use with Spring Profile RECEIVER "java -Dspring.profiles.active=RECEIVER"
spring.banner.location=classpath:true-connector-banner.txt

logging.config=src/main/resources/logback-RECEIVER.xml

# Choose which events to log from list bellow
#auditableEvents=ALL,NONE,SELF_DESCRIPTION,SELF_DESCRIPTION_ALL,CONTRACT_OFFER,OFFERED_RESOURCE,REPRESENTATION,USER,EXCEPTION,CONNECTOR
# if left empty it will default to ALL
application.logging.auditableEvents=

# Body: binary mixed, form, http-header
application.openDataAppReceiverRouter=form

# Body:binary mixed, form, http-header
application.eccHttpSendRouter=form

#GLOBAL PROPERTIES
#define the directory where you can find certificates
application.targetDirectory=c:\\Users\\igor.balog\\tools\\certificates\\
#SSL Settings for https communication
#use https instead of http, if false the ssl settings can be empty
server.ssl.enabled=true
#application.ssl.key-store.name=igorecc.ddnsfree.com.jks
#application.ssl.key-store-password=allpassword
#application.ssl.key-password=allpassword
#server.ssl.key-alias=1

application.ssl.key-store.name=ssl-server.jks
application.ssl.key-store-password=changeit
application.ssl.key-password=changeit

# Check the configurations !!!
### App setup
server.port=8444
server.max-http-header-size=15360
server.ssl.key-alias=execution-core-container
server.ssl.key-password=${application.ssl.key-password}
server.ssl.key-store-password=${application.ssl.key-store-password}
server.ssl.key-store=${application.targetDirectory}${application.ssl.key-store.name}
server.ssl.key-store-provider=SUN
server.ssl.key-store-type=JKS
server.ssl.SHA256=AC3BCAED1F01C63E18D4E0994C48D18EB6F79D01844564A4BA8476BE2D17F5E4
#disable hostname validation
application.disableSslVerification=true
#enable protocol validation (default=true)
#correct protocol is required in Forward-To (https/http://example.com || wss://example.com || idscp://example.com)
application.validateProtocol=true
application.enableProtocolValidation=false

### DAPS Parameters (for getting token)
application.isEnabledDapsInteraction=false
#Cache token(true) or always use new token(false)
application.tokenCaching=true
#Fetch and cache token on startup. application.tokenCaching must be true!
application.fetchTokenOnStartup=true
#v1,v2,orbiter
application.dapsVersion=v2
#Orbiter
application.daps.orbiter.privateKey=
application.daps.orbiter.password=

application.dapsUrl=https://daps.aisec.fraunhofer.de/v2/token 
application.keyStoreName=eng\\ecc-consumer.p12
application.keyStorePassword=password
application.keystoreAliasName=1
application.trustStoreName=truststoreEcc.jks
application.trustStorePassword=allpassword
application.connectorUUID=eff835e8-bf68-4a8e-9869-d4c7ed5af9f8
#DAPS URI for validating
application.dapsJWKSUrl=https://daps.aisec.fraunhofer.de/.well-known/jwks.json
#Clearing House endpoint and local dir for hashing
application.clearingHouseUrl=http://109.232.32.193:8280/data
application.clearingHouseHashDir=C:\\Users\\igor.balog\\tools\\IDS\\ECC_Clearing_House\\Producer_Hashing

### Clearng-House
application.isEnabledClearingHouse=false

#D endpoint

#Connector URIs
application.uriSchema=http
application.uriAuthority=//w3id.org/engrd
#application.uriPath=/autogen/artifactResponseMessage/
application.uriConnector=/connector/

#IDSCP2
application.idscp2.isEnabled=false
#define if the connector is used as receiver
application.isReceiver=true

#HTTP port
http.port=8082

#WSS Port
application.wss.server.port=8086

#Camel A endpoint
application.camelSenderPort=8888

#Camel B endpoint
application.camelReceiverPort=8890

#Open API Data APP
application.openDataAppReceiver=https://localhost:8083/data
application.openDataAppReceiverHealth=https://localhost:8083/about/version
# For WSS flow
#application.openDataAppReceiver=https://localhost:9000/incoming-data-app/routerBodyBinary

application.healthcheck.enabled=false
application.healthcheck.cron.expression=0 */2 * ? * *


#Camel - Spring Boot
camel.springboot.main-run-controller=true
camel.ssl.config.key-managers.key-password=${application.ssl.key-password}
camel.ssl.config.key-managers.key-store.resource=${application.targetDirectory}${application.ssl.key-store.name}
camel.ssl.config.key-managers.key-store.password=${application.ssl.key-store-password}

#Camel - HTTP4
#Selfdescription SSL Settings
camel.component.http4.use-global-ssl-context-parameters=true

#Camel - Jetty
#Camel routes SSL Settings
camel.component.jetty.use-global-ssl-context-parameters=true
camel.component.jetty.keystore=${application.targetDirectory}${application.ssl.key-store.name}
camel.component.jetty.ssl-password=${application.ssl.key-store-password}
camel.component.jetty.ssl-key-password=${application.ssl.key-password}


information.model.version=@information.model.version@
application.basedir=@application.basedir@

# Enable WebSocket over Https -> Disable Idscp to use!
application.websocket.isEnabled=false
#Enable WS communication channel from/to DataAPP
application.dataApp.websocket.isEnabled=false

# Usage Control App
spring.ids.ucapp.baseUrl=https://localhost/platoontec/PlatoonDataUsage/1.0/
application.isEnabledUsageControl=false
# mydata or platoon
application.usageControlVersion=platoon
#OAuth2 for PLATOON Usage Control
client.registration.name=platoon
spring.security.oauth2.client.registration.platoon.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.platoon.client-id=usage_control
spring.security.oauth2.client.registration.platoon.client-secret=316a6b8a-b554-4277-8e73-cfd6a5818506
#Keycloak URL
spring.security.oauth2.client.provider.platoon.token-uri=https://platoon.tecnalia.com:8443/auth/realms/platoon/protocol/openid-connect/token


#Technical headers
application.technicalHeaders=header,Is-Enabled-DataApp-WebSocket,payload,Forward-To,Payload-Content-Type,Host

#SelfDescription
#API management credentials
application.user.api.username=admin
application.user.api.password=$2a$10$MQ5grDaIqDpBjMlG78PFduv.AMRe9cs0CNm/V4cgUubrqdGTFCH3m
application.user.connector.username=connector
application.user.connector.password=$2a$10$MQ5grDaIqDpBjMlG78PFduv.AMRe9cs0CNm/V4cgUubrqdGTFCH3m
#number of consecutive failed attempts
application.user.lock.maxattempts=20
# duration for how long user will be locked
application.user.lock.duration=30
# time unit used for locking user, possible values are: SECONDS,MINUTES,HOURS,DAYS
application.user.lock.unit=MINUTES

application.selfdescription.description=Connector description
application.selfdescription.title=Connector title
application.selfdescription.curator=http://curatorURI.com
application.selfdescription.maintainer=http://maintainerURI.com
application.selfdescription.registrateOnStartup=false
application.selfdescription.brokerURL=
application.selfdescription.filelocation=

#For logging the response over WSS set to DEBUG, else leave empty
#logging.level.it.eng.idsa.businesslogic.processor.receiver=
